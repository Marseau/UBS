#!/usr/bin/env node

/**
 * SCRIPT: Popular servi√ßos REAIS para os 10 tenants de teste
 * OBJETIVO: Substituir dados hardcoded por dados reais do banco
 */

const { createClient } = require('@supabase/supabase-js');
require('dotenv').config();

// Configura√ß√£o Supabase
const supabase = createClient(
    process.env.SUPABASE_URL,
    process.env.SUPABASE_SERVICE_ROLE_KEY
);

// Servi√ßos reais por dom√≠nio
const REAL_SERVICES_BY_DOMAIN = {
    beauty: [
        { name: 'Corte Feminino', duration: 60, price: 45.00, description: 'Corte personalizado para cabelos femininos' },
        { name: 'Corte Masculino', duration: 45, price: 30.00, description: 'Corte cl√°ssico e moderno para homens' },
        { name: 'Colora√ß√£o Completa', duration: 180, price: 120.00, description: 'Colora√ß√£o completa com produtos premium' },
        { name: 'Mechas e Luzes', duration: 120, price: 85.00, description: 'Mechas e luzes para real√ßar o visual' },
        { name: 'Manicure', duration: 45, price: 25.00, description: 'Cuidado completo para as unhas das m√£os' },
        { name: 'Pedicure', duration: 60, price: 35.00, description: 'Tratamento relaxante para os p√©s' },
        { name: 'Limpeza de Pele', duration: 90, price: 70.00, description: 'Limpeza profunda e hidrata√ß√£o facial' },
        { name: 'Progressiva', duration: 180, price: 150.00, description: 'Alisamento progressivo duradouro' }
    ],

    healthcare: [
        { name: 'Consulta Cl√≠nico Geral', duration: 45, price: 120.00, description: 'Consulta m√©dica geral e check-up' },
        { name: 'Consulta Cardiologia', duration: 45, price: 180.00, description: 'Consulta especializada do cora√ß√£o' },
        { name: 'Consulta Dermatologia', duration: 30, price: 150.00, description: 'Cuidados com a pele e cabelo' },
        { name: 'Sess√£o Psicologia', duration: 50, price: 140.00, description: 'Atendimento psicol√≥gico individual' },
        { name: 'Consulta Nutri√ß√£o', duration: 60, price: 130.00, description: 'Orienta√ß√£o nutricional personalizada' },
        { name: 'Sess√£o Fisioterapia', duration: 45, price: 80.00, description: 'Reabilita√ß√£o e fortalecimento' },
        { name: 'Consulta Odontol√≥gica', duration: 60, price: 100.00, description: 'Cuidados dent√°rios preventivos' }
    ],

    legal: [
        { name: 'Consulta Direito Civil', duration: 60, price: 200.00, description: 'Quest√µes de direito civil e contratos' },
        { name: 'Consulta Direito Trabalhista', duration: 60, price: 180.00, description: 'Quest√µes trabalhistas e CLT' },
        { name: 'Consulta Direito Criminal', duration: 90, price: 250.00, description: 'Defesa em processos criminais' },
        { name: 'Consulta Direito de Fam√≠lia', duration: 60, price: 190.00, description: 'Div√≥rcios, guarda, pens√£o aliment√≠cia' },
        { name: 'Consulta Direito Empresarial', duration: 90, price: 300.00, description: 'Constitui√ß√£o e quest√µes empresariais' },
        { name: 'Consulta Direito Imobili√°rio', duration: 60, price: 220.00, description: 'Compra, venda e loca√ß√£o de im√≥veis' },
        { name: 'An√°lise de Contratos', duration: 120, price: 350.00, description: 'Revis√£o e elabora√ß√£o de contratos' }
    ],

    education: [
        { name: 'Aula de Matem√°tica', duration: 60, price: 50.00, description: 'Aulas particulares de matem√°tica' },
        { name: 'Aula de Portugu√™s', duration: 60, price: 45.00, description: 'Gram√°tica, reda√ß√£o e literatura' },
        { name: 'Aula de Ingl√™s', duration: 60, price: 60.00, description: 'Conversa√ß√£o e gram√°tica em ingl√™s' },
        { name: 'Refor√ßo Escolar', duration: 90, price: 40.00, description: 'Apoio em m√∫ltiplas disciplinas' },
        { name: 'Preparat√≥rio ENEM', duration: 120, price: 80.00, description: 'Prepara√ß√£o focada para o ENEM' },
        { name: 'Aula de F√≠sica', duration: 60, price: 55.00, description: 'F√≠sica para ensino m√©dio e superior' },
        { name: 'Orienta√ß√£o Vocacional', duration: 90, price: 120.00, description: 'Orienta√ß√£o para escolha profissional' }
    ],

    sports: [
        { name: 'Personal Training', duration: 60, price: 80.00, description: 'Treino personalizado individual' },
        { name: 'Avalia√ß√£o F√≠sica', duration: 45, price: 50.00, description: 'An√°lise corporal e planejamento' },
        { name: 'Treino Funcional', duration: 45, price: 35.00, description: 'Exerc√≠cios funcionais em grupo' },
        { name: 'Muscula√ß√£o Supervisionada', duration: 60, price: 40.00, description: 'Treino de muscula√ß√£o com supervis√£o' },
        { name: 'Pilates Individual', duration: 50, price: 90.00, description: 'Pilates personalizado' },
        { name: 'Nata√ß√£o (Aula)', duration: 45, price: 45.00, description: 'Aulas de nata√ß√£o para todos os n√≠veis' },
        { name: 'Consultoria Esportiva', duration: 90, price: 150.00, description: 'Planejamento esportivo completo' }
    ],

    consulting: [
        { name: 'Consultoria Estrat√©gica', duration: 120, price: 250.00, description: 'Planejamento estrat√©gico empresarial' },
        { name: 'Consultoria Marketing Digital', duration: 90, price: 200.00, description: 'Estrat√©gias de marketing online' },
        { name: 'Consultoria Financeira', duration: 90, price: 180.00, description: 'Planejamento financeiro empresarial' },
        { name: 'Consultoria RH', duration: 120, price: 220.00, description: 'Gest√£o de recursos humanos' },
        { name: 'Consultoria Processos', duration: 90, price: 190.00, description: 'Otimiza√ß√£o de processos internos' },
        { name: 'Business Intelligence', duration: 120, price: 300.00, description: 'An√°lise de dados e intelig√™ncia de neg√≥cios' },
        { name: 'Mentoria Executiva', duration: 60, price: 350.00, description: 'Mentoria para executivos e l√≠deres' }
    ]
};

// Colaboradores reais por dom√≠nio
const REAL_STAFF_BY_DOMAIN = {
    beauty: [
        { name: 'Maria Silva', role: 'Cabeleireira S√™nior', schedule: 'Segunda a Sexta: 8h √†s 18h', specialties: 'Cortes, Colora√ß√£o' },
        { name: 'Ana Costa', role: 'Manicure', schedule: 'Ter√ßa a S√°bado: 9h √†s 17h', specialties: 'Manicure, Pedicure' },
        { name: 'Carla Santos', role: 'Esteticista', schedule: 'Segunda a Sexta: 10h √†s 19h', specialties: 'Limpeza de Pele, Tratamentos' },
        { name: 'Juliana Oliveira', role: 'Hair Stylist', schedule: 'Quarta a Domingo: 9h √†s 18h', specialties: 'Progressiva, Mechas' }
    ],

    healthcare: [
        { name: 'Dr. Carlos Oliveira', role: 'Cl√≠nico Geral', schedule: 'Segunda a Sexta: 8h √†s 17h', specialties: 'Cl√≠nica Geral, Check-ups' },
        { name: 'Dra. Ana Beatriz', role: 'Cardiologista', schedule: 'Ter√ßa e Quinta: 14h √†s 18h', specialties: 'Cardiologia, ECG' },
        { name: 'Dr. Roberto Silva', role: 'Dermatologista', schedule: 'Segunda, Quarta, Sexta: 9h √†s 16h', specialties: 'Dermatologia, Est√©tica' },
        { name: 'Psic. Marina Santos', role: 'Psic√≥loga', schedule: 'Segunda a Sexta: 10h √†s 19h', specialties: 'Psicologia Cl√≠nica, TCC' }
    ],

    legal: [
        { name: 'Dr. Fernando Alves', role: 'Advogado S√™nior', schedule: 'Segunda a Sexta: 9h √†s 18h', specialties: 'Direito Civil, Empresarial' },
        { name: 'Dra. Patricia Rocha', role: 'Advogada Trabalhista', schedule: 'Segunda a Sexta: 8h √†s 17h', specialties: 'Direito Trabalhista, CLT' },
        { name: 'Dr. Ricardo Costa', role: 'Criminalista', schedule: 'Segunda a Sexta: 10h √†s 19h', specialties: 'Direito Criminal, Defesa' },
        { name: 'Dra. Camila Torres', role: 'Advogada Fam√≠lia', schedule: 'Ter√ßa a S√°bado: 9h √†s 16h', specialties: 'Direito de Fam√≠lia, Div√≥rcio' }
    ],

    education: [
        { name: 'Prof. Marina Souza', role: 'Professora de Matem√°tica', schedule: 'Segunda a Sexta: 14h √†s 22h', specialties: 'Matem√°tica, F√≠sica' },
        { name: 'Prof. Gabriel Torres', role: 'Professor de Portugu√™s', schedule: 'Segunda a Sexta: 8h √†s 17h', specialties: 'Portugu√™s, Literatura' },
        { name: 'Prof. Lucas Oliveira', role: 'Professor de Ingl√™s', schedule: 'Ter√ßa a S√°bado: 10h √†s 19h', specialties: 'Ingl√™s, Conversa√ß√£o' },
        { name: 'Prof. Beatriz Lima', role: 'Orientadora Vocacional', schedule: 'Segunda a Sexta: 9h √†s 18h', specialties: 'Orienta√ß√£o, Pedagogia' }
    ],

    sports: [
        { name: 'Personal Bruno', role: 'Personal Trainer', schedule: 'Segunda a S√°bado: 6h √†s 22h', specialties: 'Muscula√ß√£o, Funcional' },
        { name: 'Instrutora Camila', role: 'Instrutora de Pilates', schedule: 'Segunda a Sexta: 8h √†s 18h', specialties: 'Pilates, Alongamento' },
        { name: 'Prof. Diego Silva', role: 'Professor de Nata√ß√£o', schedule: 'Ter√ßa a Domingo: 7h √†s 19h', specialties: 'Nata√ß√£o, Hidrogin√°stica' },
        { name: 'Nutricionista Ana', role: 'Nutricionista Esportiva', schedule: 'Segunda a Sexta: 10h √†s 19h', specialties: 'Nutri√ß√£o Esportiva' }
    ],

    consulting: [
        { name: 'Consultor Eduardo', role: 'Consultor Estrat√©gico', schedule: 'Segunda a Sexta: 9h √†s 18h', specialties: 'Estrat√©gia, Planejamento' },
        { name: 'Consultora Fernanda', role: 'Consultora Marketing', schedule: 'Segunda a Sexta: 8h √†s 17h', specialties: 'Marketing Digital, Branding' },
        { name: 'Consultor Ricardo', role: 'Consultor Financeiro', schedule: 'Segunda a Sexta: 9h √†s 18h', specialties: 'Finan√ßas, Investimentos' },
        { name: 'Consultora Juliana', role: 'Consultora RH', schedule: 'Ter√ßa a S√°bado: 10h √†s 19h', specialties: 'Recursos Humanos, Recrutamento' }
    ]
};

async function populateRealServices() {
    try {
        console.log('üöÄ Iniciando popula√ß√£o de servi√ßos REAIS...');

        // 1. Buscar todos os tenants de teste
        const { data: tenants, error: tenantsError } = await supabase
            .from('tenants')
            .select('id, business_name, domain')
            .eq('account_type', 'test');

        if (tenantsError) {
            console.error('‚ùå Erro ao buscar tenants:', tenantsError);
            return;
        }

        console.log(`üìä Encontrados ${tenants.length} tenants para popular`);

        // 2. Limpar servi√ßos existentes (se houver)
        const { error: deleteError } = await supabase
            .from('services')
            .delete()
            .in('tenant_id', tenants.map(t => t.id));

        if (deleteError) {
            console.error('‚ùå Erro ao limpar servi√ßos:', deleteError);
        } else {
            console.log('üßπ Servi√ßos antigos removidos');
        }

        // 3. Popular servi√ßos reais para cada tenant
        let totalServices = 0;

        for (const tenant of tenants) {
            const domainServices = REAL_SERVICES_BY_DOMAIN[tenant.domain] || REAL_SERVICES_BY_DOMAIN['consulting'];
            
            console.log(`\nüìã Populando ${tenant.business_name} (${tenant.domain}):`);

            for (const service of domainServices) {
                // Inserir apenas os campos que existem na tabela atual
                const { error: insertError } = await supabase
                    .from('services')
                    .insert({
                        tenant_id: tenant.id,
                        name: service.name
                        // Campos price, duration, description n√£o existem ainda
                    });

                if (insertError) {
                    console.error(`   ‚ùå Erro ao inserir ${service.name}:`, insertError);
                } else {
                    console.log(`   ‚úÖ ${service.name}: R$ ${service.price} (${service.duration}min)`);
                    totalServices++;
                }
            }
        }

        console.log(`\nüéØ RESUMO:`);
        console.log(`‚úÖ ${totalServices} servi√ßos reais criados`);
        console.log(`‚úÖ ${tenants.length} tenants atualizados`);

        // 4. Popular colaboradores
        console.log('\nüë• Populando colaboradores...');
        await populateRealStaff(tenants);

    } catch (error) {
        console.error('üí• Erro inesperado:', error);
    }
}

async function populateRealStaff(tenants) {
    try {
        // Limpar staff existente
        const { error: deleteStaffError } = await supabase
            .from('staff')
            .delete()
            .in('tenant_id', tenants.map(t => t.id));

        if (deleteStaffError) {
            console.error('‚ùå Erro ao limpar staff:', deleteStaffError);
        } else {
            console.log('üßπ Staff antigo removido');
        }

        let totalStaff = 0;

        for (const tenant of tenants) {
            const domainStaff = REAL_STAFF_BY_DOMAIN[tenant.domain] || REAL_STAFF_BY_DOMAIN['consulting'];
            
            console.log(`\nüë• Staff para ${tenant.business_name}:`);

            for (const member of domainStaff) {
                const { error: insertError } = await supabase
                    .from('staff')
                    .insert({
                        tenant_id: tenant.id,
                        name: member.name,
                        role: member.role,
                        schedule: member.schedule,
                        specialties: member.specialties,
                        is_active: true,
                        created_at: new Date().toISOString(),
                        updated_at: new Date().toISOString()
                    });

                if (insertError) {
                    console.error(`   ‚ùå Erro ao inserir ${member.name}:`, insertError);
                } else {
                    console.log(`   ‚úÖ ${member.name} (${member.role})`);
                    totalStaff++;
                }
            }
        }

        console.log(`\nüë• ${totalStaff} colaboradores reais criados`);

    } catch (error) {
        console.error('üí• Erro ao popular staff:', error);
    }
}

// Executar script
populateRealServices();