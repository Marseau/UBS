#!/bin/bash

echo "üé® ========== TESTE PLACID CAROUSEL =========="
echo ""

# Criar conte√∫do de teste via API do Supabase
echo "üìù Criando conte√∫do de teste..."

CONTENT_ID=$(curl -s -X POST "https://qsdfyffuonywmtnlycri.supabase.co/rest/v1/editorial_content" \
  -H "apikey: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFzZGZ5ZmZ1b255d210bmx5Y3JpIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTExMjY0NzgsImV4cCI6MjA2NjcwMjQ3OH0.IDJdOApiNM0FJvRe5mp28L7U89GWeHpPoPlPreexwbg" \
  -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFzZGZ5ZmZ1b255d210bmx5Y3JpIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1MTEyNjQ3OCwiZXhwIjoyMDY2NzAyNDc4fQ.x_V9gwALfFJsgDq47uAjCBBfT5vHfBN3_ht-lm6C9iU" \
  -H "Content-Type: application/json" \
  -H "Prefer: return=representation" \
  -d '{
    "week_number": 1,
    "day_of_week": "monday",
    "x_thread_part1": "Slide 1:\n30% dos agendamentos falham em PMEs (HubSpot, 2024)\n\nüëâ Sua agenda est√° vazando receita?\n\nSlide 2:\nAgendamento manual = caos:\n\nüì≤ WhatsApp + planilhas + telefone\n‚ùå Zero integra√ß√£o\nüí• Equipe sobrecarregada\n\nSlide 3:\nExemplo:\n\nSal√£o com 5 profissionais\n2 faltas/semana cada ‚Üí R$1.500/semana perdidos\nAnual: R$78.000 indo embora\n\nSlide 4:\nConsequ√™ncias:\n\n1Ô∏è‚É£ Agenda furada\n2Ô∏è‚É£ Clientes frustrados\n3Ô∏è‚É£ Profissionais desmotivados\n\nSlide 5:\nE piora quando:\n\n‚ö†Ô∏è Sem lembretes\n‚ö†Ô∏è Agenda compartilhada\n‚ö†Ô∏è Cliente muda √∫ltima hora\n\nSlide 6:\nSintomas claros:\n\n‚úÖ Tudo manual\n‚úÖ N√£o sabe quem confirmou\n‚úÖ Muitos cancelamentos\n\nSlide 7:\nüëâ Resumindo: sua agenda pode estar drenando receita.\n\nSalve este carrossel e siga para aprender como evitar!",
    "instagram_caption": "30% dos agendamentos falham em PMEs. Sua agenda est√° vazando receita? üí∞"
  }' | jq -r '.[0].id')

if [ -z "$CONTENT_ID" ] || [ "$CONTENT_ID" = "null" ]; then
  echo "‚ùå Erro ao criar conte√∫do"
  exit 1
fi

echo "‚úÖ Conte√∫do criado com ID: $CONTENT_ID"
echo ""

# Aguardar um momento
sleep 2

# Chamar API Placid para gerar carrossel
echo "üé¨ Gerando carrossel via Placid..."
echo "üì° POST http://localhost:3000/api/placid-carousel/generate/$CONTENT_ID"
echo ""

RESPONSE=$(curl -s -X POST "http://localhost:3000/api/placid-carousel/generate/$CONTENT_ID")

echo "‚úÖ Resposta da API:"
echo "$RESPONSE" | jq '.'
echo ""

# Extrair informa√ß√µes
SUCCESS=$(echo "$RESPONSE" | jq -r '.success')
TOTAL_SLIDES=$(echo "$RESPONSE" | jq -r '.total_slides')
COST=$(echo "$RESPONSE" | jq -r '.cost')

if [ "$SUCCESS" = "true" ]; then
  echo "üìä Resumo:"
  echo "   Content ID: $CONTENT_ID"
  echo "   Total de slides: $TOTAL_SLIDES"
  echo "   Custo: \$$COST"
  echo ""
  echo "üì∏ URLs das imagens geradas:"
  echo "$RESPONSE" | jq -r '.carousel_urls[]' | nl
  echo ""
  echo "‚úÖ Teste conclu√≠do com sucesso!"
  echo ""
  echo "üëâ Visualize as imagens copiando as URLs acima"
else
  echo "‚ùå Erro na gera√ß√£o do carrossel"
  echo "$RESPONSE" | jq -r '.error, .message'
fi
